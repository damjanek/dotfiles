[color]
  diff = auto
  status = auto
  branch = auto
  interactive = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = red
[color "diff"]
  meta = yellow 
  frag = magenta
  old = red
#  oldMoved = red reverse
  new = green
#  newMoved = green reverse
  whitespace = red reverse
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[alias]
  lll = log --abbrev-commit --decorate
  l = "!git log --abbrev-commit --date=short --pretty=format:'%x00%h%x00%cd%x00%s%x00%an%x00%d' | gawk -F '\\0' '{ printf \"%s\\033[31m%s\\033[0m \\033[32m%s\\033[0m %-50s \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, $3, gensub(/(.{49}).{2,}/, \"\\\\1…\",\"g\",$4), $5, $6 }' | less -R"
  ll = "!git log --abbrev-commit --date=short --pretty=format:'%x00%h%x00%cd%x00%s%x00%an%x00%d' | gawk -F '\\0' '{ printf \"%s\\033[31m%s\\033[0m \\033[32m%s\\033[0m %-80s \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, $3, gensub(/(.{79}).{2,}/, \"\\\\1…\",\"g\",$4), $5, $6 }' | less -R"
  lg = "!git log --graph --color=always --abbrev-commit --date=relative --pretty=format:'%x00%h%x00%s%x00%cd%x00%an%x00%d' | gawk -F '\\0' '{ printf \"%s\\033[31m%s\\033[0m %-50s \\033[32m%14s\\033[0m \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, gensub(/(.{49}).{2,}/, \"\\\\1…\",\"g\",$3), $4, $5, $6 }' | less -R"
  llg = "!git log --graph --color=always --abbrev-commit --date=relative --pretty=format:'%x00%h%x00%s%x00%cd%x00%an%x00%d' | gawk -F '\\0' '{ printf \"%s\\033[31m%s\\033[0m %-80s \\033[32m%14s\\033[0m \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, gensub(/(.{79}).{2,}/, \"\\\\1…\",\"g\",$3), $4, $5, $6 }' | less -R"
  lgg = "!git log --graph --color=always --abbrev-commit --date=relative --pretty=format:'%x00%h%x00%s%x00%cd%x00%an%x00%d' | gawk -F '\\0' '{ printf \"%s\\033[31m%s\\033[0m %-80s \\033[32m%14s\\033[0m \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, gensub(/(.{79}).{2,}/, \"\\\\1…\",\"g\",$3), $4, $5, $6 }' | less -R"
  s = status -s
  new = !sh -c 'git log $1@{1}..$1@{0} "$@"'
  port = !sh -c 'git show ${0}:${1} > ${1}'
  p = !sh -c 'git pull --rebase && git push'
  ds = diff --stat
  remprune = remote prune origin
  df = diff
  dc = diff --cached
  gerrit = push origin HEAD:refs/for/production
  createver = describe --long --dirty --abbrev=10 --tags 
  filesincommit = show --pretty="format:" --name-only

[core]
  excludesfile = ~/.gitignore
  whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
[push]
	default = simple
[merge]
	tool = vimdiff
[pull]
  rebase = true
[diff]
  tool = vimdiff
  #colorMoved = zebra
[credential]
	helper = store
[include]
  path = .gitconfig.local
